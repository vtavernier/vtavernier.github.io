<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c++ on The Tavern</title><link>https://vtavernier.github.io/pr-preview/pr-3/tags/c++/</link><description>Recent content in c++ on The Tavern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Mon, 15 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://vtavernier.github.io/pr-preview/pr-3/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>I tried cross-compiling for the Raspberry Pi</title><link>https://vtavernier.github.io/pr-preview/pr-3/posts/i-tried-cross-compiling/</link><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate><guid>https://vtavernier.github.io/pr-preview/pr-3/posts/i-tried-cross-compiling/</guid><description>And it went horribly wrong.
In software development there are tasks which are easy and others which are&amp;hellip; less easyâ„¢. This post tells the story of how I managed to cross-compile a Rust project with native dependencies for the Raspberry Pi Zero regardless of the many, many pitfalls of cross-compiling. If you &amp;mdash; like me &amp;mdash; enjoy spending your spare time battling with toolchains and obscure compilation flags, you will probably enjoy this tale.</description></item></channel></rss>